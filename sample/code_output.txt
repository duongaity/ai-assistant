/**
 * Class MaxFinder cung cấp các phương thức để tìm giá trị lớn nhất
 * trong một mảng số nguyên, trong hai số và trong ba số thực.
 */
public class MaxFinder {
    
    /**
     * Tìm giá trị lớn nhất trong một mảng số nguyên.
     * 
     * @param numbers Mảng số nguyên cần tìm giá trị lớn nhất.
     * @return Giá trị lớn nhất trong mảng.
     * @throws IllegalArgumentException Nếu mảng null hoặc rỗng.
     */
    public int findMax(int[] numbers) {
        // Kiểm tra xem mảng có null hoặc rỗng không
        if (numbers == null || numbers.length == 0) {
            // Ném ra ngoại lệ nếu mảng không hợp lệ
            throw new IllegalArgumentException("Array cannot be null or empty");
        }
        
        // Khởi tạo giá trị max bằng phần tử đầu tiên của mảng
        int max = numbers[0];
        // Duyệt qua từng phần tử trong mảng bắt đầu từ chỉ số 1
        for (int i = 1; i < numbers.length; i++) {
            // Nếu phần tử hiện tại lớn hơn max, cập nhật giá trị max
            if (numbers[i] > max) {
                max = numbers[i];
            }
        }
        // Trả về giá trị lớn nhất tìm được
        return max;
    }
    
    /**
     * Tìm giá trị lớn nhất giữa hai số nguyên.
     * 
     * @param a Số nguyên thứ nhất.
     * @param b Số nguyên thứ hai.
     * @return Giá trị lớn nhất giữa a và b.
     */
    public int findMaxInTwoNumbers(int a, int b) {
        // Sử dụng toán tử điều kiện để trả về giá trị lớn hơn giữa a và b
        return (a > b) ? a : b;
    }
    
    /**
     * Tìm giá trị lớn nhất trong ba số thực.
     * 
     * @param x Số thực thứ nhất.
     * @param y Số thực thứ hai.
     * @param z Số thực thứ ba.
     * @return Giá trị lớn nhất trong ba số.
     */
    public double findMaxInThreeNumbers(double x, double y, double z) {
        // Khởi tạo max bằng giá trị x
        double max = x;
        // So sánh y với max, nếu y lớn hơn thì cập nhật max
        if (y > max) {
            max = y;
        }
        // So sánh z với max, nếu z lớn hơn thì cập nhật max
        if (z > max) {
            max = z;
        }
        // Trả về giá trị lớn nhất tìm được
        return max;
    }
    
    /**
     * Phương thức main để kiểm tra các phương thức trong class MaxFinder.
     * 
     * @param args Tham số dòng lệnh (không sử dụng trong trường hợp này).
     */
    public static void main(String[] args) {
        // Tạo một đối tượng MaxFinder
        MaxFinder finder = new MaxFinder();
        
        // Khởi tạo mảng số nguyên để tìm giá trị lớn nhất
        int[] array = {5, 2, 9, 1, 7, 6};
        // Gọi phương thức findMax để tìm giá trị lớn nhất trong mảng
        int maxInArray = finder.findMax(array);
        // In ra giá trị lớn nhất trong mảng
        System.out.println("Max in array: " + maxInArray);
        
        // Gọi phương thức findMaxInTwoNumbers để tìm giá trị lớn nhất giữa hai số
        int maxOfTwo = finder.findMaxInTwoNumbers(15, 25);
        // In ra giá trị lớn nhất giữa hai số
        System.out.println("Max of two numbers: " + maxOfTwo);
        
        // Gọi phương thức findMaxInThreeNumbers để tìm giá trị lớn nhất trong ba số
        double maxOfThree = finder.findMaxInThreeNumbers(3.5, 2.8, 4.1);
        // In ra giá trị lớn nhất trong ba số
        System.out.println("Max of three numbers: " + maxOfThree);
    }
}
