version: '3.8'

services:
  # Backend service (Flask API)
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: code-commenter-backend
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - AZURE_OPENAI_ENDPOINT=${AZURE_OPENAI_ENDPOINT}
      - AZURE_OPENAI_API_KEY=${AZURE_OPENAI_API_KEY}
      - AZURE_OPENAI_DEPLOYMENT_NAME=${AZURE_OPENAI_DEPLOYMENT_NAME:-GPT-4o-mini}
    volumes:
      - ./backend:/app
      - backend_logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - code-commenter-network

  # Frontend service (React + Nginx)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: code-commenter-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - code-commenter-network

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: code-commenter-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes
    networks:
      - code-commenter-network

  # Development database (optional for future features)
  postgres:
    image: postgres:15-alpine
    container_name: code-commenter-db
    environment:
      - POSTGRES_DB=codecommenter
      - POSTGRES_USER=codecommenter
      - POSTGRES_PASSWORD=codecommenter123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    networks:
      - code-commenter-network

  # Nginx Load Balancer (for production scaling)
  nginx-lb:
    image: nginx:alpine
    container_name: code-commenter-lb
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - code-commenter-network

# Networks
networks:
  code-commenter-network:
    driver: bridge
    name: code-commenter-network

# Volumes
volumes:
  backend_logs:
    driver: local
  redis_data:
    driver: local
  postgres_data:
    driver: local
