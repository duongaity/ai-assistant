version: '3.8'

services:
  # Backend service (Flask API)
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: ai-assistant-backend
    ports:
      - "8888:8888"
    environment:
      - FLASK_ENV=production
      - AZURE_OPENAI_ENDPOINT=${AZURE_OPENAI_ENDPOINT:-https://your-openai-resource.openai.azure.com/}
      - AZURE_OPENAI_API_KEY=${AZURE_OPENAI_API_KEY:-your-api-key-here}
      - AZURE_OPENAI_DEPLOYMENT_NAME=${AZURE_OPENAI_DEPLOYMENT_NAME:-gpt-4o-mini}
    volumes:
      - ./backend:/app
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - ai-assistant-network

  # Frontend service (React + Vite)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ai-assistant-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - ai-assistant-network

  # Nginx Load Balancer
  nginx:
    image: nginx:alpine
    container_name: ai-assistant-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - ai-assistant-network

# Networks
networks:
  ai-assistant-network:
    driver: bridge
    name: ai-assistant-network

# Volumes
volumes:
  backend_data:
    driver: local
